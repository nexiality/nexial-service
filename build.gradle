buildscript {
    ext {
        springBootVersion = '2.1.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'distribution'

group 'org.nexialservice'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}
//create a single Jar with all dependencies
task createJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'nexial-service',
                   'Implementation-Version': version
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    zip64 = true
}
task distro {
    group "Build"
    description "build project clean room and update lib/ directory"
    mustRunAfter clean
    dependsOn build
}

distributions {
    main {
        contents {
            into('lib') {
                from jar
                from 'lib'
                from(project.configurations.runtime)
            }
            into('template') {
                from 'template'
            }
            into('bin') {
                from 'bin'
            }
        }
    }
}

test {
    useJUnitPlatform()
    outputs.upToDateWhen { false }

    filter {
        //only run unit test, see gradle/bdd.gradle
        includeTestsMatching "org.*"
    }
}

dependencies {
    compile fileTree(dir: 'lib-nexial', include: '*.jar')
    compile('org.springframework.boot:spring-boot-dependencies:2.1.6.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.springframework.boot:spring-boot-starter-logging')
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-test:+")
    compile('org.xerial:sqlite-jdbc:+')
    compile("org.apache.commons:commons-lang3:+")
    compile("junit:junit:4.+")
    testCompile("junit:junit:4.+")
}